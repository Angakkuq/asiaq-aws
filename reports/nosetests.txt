nose.config: INFO: Set working dir to /Users/ejen/pydevels/asiaq-aws
/Users/ejen/pyenvs/asiaq-aws/lib/python2.7/site-packages/nose/config.py:435: DeprecationWarning: Use of multiple -w arguments is deprecated and support may be removed in a future release. You can get the same behavior by passing directories without the -w argument on the command line, or by using the --tests argument in a configuration file.
  DeprecationWarning)
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.cover: INFO: Coverage report will include only packages: ['disco_aws_automation']
nose.plugins.cover: INFO: Coverage report will include only packages: ['disco_aws_automation']
nose.plugins.cover: INFO: Coverage report will include only packages: ['disco_aws_automation']
nose.plugins.cover: INFO: Coverage report will include only packages: ['disco_aws_automation']
nose.plugins.cover: INFO: Coverage report will include only packages: ['disco_aws_automation']
nose.plugins.cover: INFO: Coverage report will include only packages: ['disco_aws_automation']
nose.plugins.cover: INFO: Coverage report will include only packages: ['disco_aws_automation']
nose.plugins.cover: INFO: Coverage report will include only packages: ['disco_aws_automation']
nose.plugins.cover: INFO: Coverage report will include only packages: ['disco_aws_automation']
nose.plugins.cover: INFO: Coverage report will include only packages: ['disco_aws_automation']
nose.plugins.cover: INFO: Coverage report will include only packages: ['disco_aws_automation']
nose.plugins.cover: INFO: Coverage report will include only packages: ['disco_aws_automation']
nose.plugins.cover: INFO: Coverage report will include only packages: ['disco_aws_automation']
Validates all json files for syntax ... ok
Ensure a valid object was created ... ok
Ensure we can create topics ... ok
Ensure the right topics are returned for deletion ... ok
Ensure we can subscribe emails ... ok
Ensure we can subscribe urls ... ok
Ensure proper topic arn is constructed from a topic name ... ok
random passwords are at least 60 characters long ... ok
Test getting a fresh group with None as max_size ... ok
Test getting a fresh group with None as max_size ... ok
Test getting a fresh group with None as min_size ... ok
Test getting a group and attaching an elb ... ok
Test getting a group and not scaling it ... ok
Test scaling down to 0 hosts ... ok
Test getting a group and scaling it up ... ok
_get_snapshot_dev returns the one device with a snapshot attached ... ok
update_elb will add new lb and remove old when there is no overlap in sets ... ok
update_elb will not churn an lb that is in both the existing config and new config ... ok
update_elb will remove all load balancers when none are configured ... ok
Calling update_snapshot when already running latest snapshot does nothing ... ok
Calling update_snapshot when not running latest snapshot calls update_group with new config ... ok
nose.plugins.cover: INFO: Coverage report will include only packages: ['disco_aws_automation']
nose.plugins.cover: INFO: Coverage report will include only packages: ['disco_aws_automation']
nose.plugins.cover: INFO: Coverage report will include only packages: ['disco_aws_automation']
nose.plugins.cover: INFO: Coverage report will include only packages: ['disco_aws_automation']
Tests that all_stage_amis calls list_amis correctly without restrictions ... ok
Tests that all_stage_amis calls list_amis correctly with restrictions ... ok
Tests that filter overrides pipeline filtering when hostclass is set ... ok
Test test_ami handling of non-pipeline hostclass ... ok
Create and delete bunch of alarms ... ok
Decoding Team based Alarm Names works ... ok
Decoding Disco era Alarm Names works ... ok
decode_alarm_name raises on bogus name ... ok
Deletion by hostclass name ... ok
Test DiscoAlarmsConfig get_alarms for regular metrics ... ok
Test DiscoAlarmsConfig get_alarms for ELB metrics ... ok
Test DiscoAlarmsConfig get_alarms for log pattern metrics ... ok
Test that get_alarms filter works ... ok
Alarm object is correctly instanciated ... ok
Creating same alert overwrites old one ... ok
test that retainage reserves sufficient instances ... ok
Test that retainage of zero retatins nothing ... ok
test that tags are checked for autoscaling groups ... ok
Test that get_autoscaling_groups makes only valid calls ... ok
No instance killed when instance list is empty ... ok
Right percentage of instances killed when instance list is large ... ok
At least one instance killed when instance list is small ... ok
Test that terminate makes only valid calls ... ok
Test that get_phase1_ami_id raises AMIError if find_ami returns None ... ok
Test that get_phase1_ami_id uses find_ami properly on success ... ok
Test that list amis can be called without filter successfully ... ok
Test that list amis can filter by product line successfully ... ok
Test that list amis can filter by productline and stage successfully ... ok
Test that list amis can filter by stage successfully ... ok
Tests that filter on hostclass does nothing when filtering is not restricted ... ok
Tests that filter on ami works when ami is set ... ok
Tests that filter on hostclass filters when the filtering hostclass is set ... ok
Tests that filter on hostclass filters to pipeline when no hostclass filter set ... ok
Tests that we can find the next untested ami to test for each hostclass ... ok
Tests if DiscoDeploy.get_integration_test works correctly ... ok
Tests that get_latest_failed_amis() returns latest failed amis ... ok
get_latest_running_amis returns later ami if hostclass has two AMIs running ... ok
_get_latest_other_image_id uses amis of old deployed instances ... ok
Tests that get_latest_tested_amis() returns latest tested amis (inc) ... ok
Tests that get_latest_tested_amis() returns latest tested amis (dec) ... ok
Tests that get_latest_tested_amis() works when an AMI is without a date ... ok
_get_latest_other_image_id returns latest of multiple amis ... ok
Tests that get_latest_untagged_amis() returns untagged amis ... ok
Tests that get_latest_untested_amis() returns untested amis ... ok
Tests that we can find the next untested ami to test for each hostclass without restrictions ... ok
Tests that we can find the next untested ami to test for each hostclass restricted to pipeline ... ok
Tests that get_newest_in_either_map works if hostclass not in first list ... ok
get_test_host returns a host for the testing hostclass ... ok
Tests that get_newest_in_either_map works with simple input ... ok
get_test_host raises an IntegrationTestError when a host can not be found ... ok
Tests that we can don't return failed AMIs to update to in prod ... ok
Tests that we can don't return any amis to update in prod when we are up to date ... ok
Tests that update an AMI that is not runnng ... ok
Tests that we can find the next untested AMI to deploy in prod ... ok
Tests that we can find the next tested AMI to deploy in prod ... ok
Tests if DiscoDeploy.is_deployable works correctly ... ok
test create_scaling_schedule with only desired schedule ... ok
test create_scaling_schedule with only desired schedule ... ok
test create_scaling_schedule with only desired schedule ... ok
test create_scaling_schedule with only desired schedule ... ok
create_userdata sets 'eip' key when an EIP is required ... ok
is_running returns true for running instance ... ok
is_running returns false if instance has terminated ... ok
is_running calls instance update ... ok
is_terminal_state returns false for running instance ... ok
is_terminal_state returns true if instance has terminated or failed to start ... ok
is_terminal_state calls instance update ... ok
Provision creates the proper launch configuration and autoscaling group with no chaos ... ok
Provision creates the proper launch configuration and autoscaling group with chaos from config ... ok
Provision creates the proper autoscaling group sizes with scheduled sizes ... ok
Provision creates the proper autoscaling group sizes with scheduled sizes ... ok
Provision creates the proper autoscaling group sizes with scheduled sizes ... ok
Provision creates the proper launch configuration and autoscaling group ... ok
_size_as_recurrence_map works with a duped map ... ok
_size_as_recurrence_map works with simple integer ... ok
_size_as_recurrence_map works with a map ... ok
_size_as_recurrence_map works with None ... ok
smoketest_once raises TimeoutError if instance is not tagged as smoketested ... ok
smoketest_once raises TimeoutError if instance is not tagged as smoketested ... ok
smoketest_once raises SmokeTestError if instance has terminated ... ok
smoketest_once Converts instance not found to TimeoutError ... ok
smoketest_once passes random EC2ResponseErrors ... ok
DiscoELB called to update or create ELB when one is configured ... ok
Update ELB deletes ELBs that are no longer configured ... ok
Test that we handle maintenance mode failure appropriately ... ok
No deploy instances are failed and not promoted when smoketest fails ... ok
We don't call spinup in a no deploy AMI dry_run ... ok
No deploy instances are promoted and autoscaling updated, when smoketest passes ... ok
Instance not in pipeline is still tested and promoted ... ok
Ensure pending AMIs are not considered for deployment ... ok
_promote_ami swallows exceptions ... ok
Test that an exception is raised if the pre-test fails ... ok
run_integration_tests runs the correct command on the correct instance ... ok
Test that run_integration_tests handles failure appropriately ... ok
Test that run_integration_tests handles failure with fallback amis ... ok
run_integration_tests raises exception when a get_test_host fails to find a host ... ok
_set_maintenance_mode makes expected remotecmd call ... ok
_set_maintenance_mode handles errors ... ok
Smoketest instances are failed and autoscaling updated on failure ... ok
Test that handle run_tests success appropriately ... ok
Smoketest instances are promoted and autoscaling updated on success ... ok
Test test with amis ... ok
Test test without amis ... ok
We don't call spinup in a deployed AMI dry_run ... ok
Test update_ami handling new non-deployable hostclass ... ok
Test update_ami handling new deployable hostclass ... ok
Test update with amis ... ok
Test update_ami handling of non-pipeline hostclass ... ok
Ensures DiscoDynamoDB.describe_table() returns the right property values of a table ... ok
Ensures invalid environment name raises DynamoDBEnvironmentError exception ... ok
Ensures DiscoDynamoDB returns names of all the tables in sorted order ... ok
Ensures DiscoDynamoDB.update_table() correctly updates a table ... ok
Test delete all log groups in environment ... ok
Test delete all metric filters in env ... ok
Test delete log groups for hostclass ... ok
Test delete metric filters for hostclass ... ok
Test listing log groups ... ok
Test list log metric filters for hostclass ... ok
Test deleting and creating metric filter from config ... ok
Test modifying a redis cluster ... ok
Test creating a subnet group ... ok
Test deleting all cache clusters in environment ... ok
Test deleting all subnet groups in environment ... ok
Test deleting a cache cluster ... ok
Test getting list of cache clusters ... ok
Test modifying a redis cluster ... ok
Test updating multiple clusters at once ... ok
Check raise exception when length doesn't match ... ok
Check raise exception when length does match ... ok
Tests that get_db_parameter_group_family handles all the expected cases ... ok
Test update without amis ... ok
apt-get update --quiet -y
create_snapshot_bdm() calls functions with correct syntax ... ok
get_latest_snapshot() returns None if no snapshots exist for hostclass ... ok
get_latest_snapshot() returns correct snapshot if many exist ... ok
is_ebs_optimized works ... ok
apt-get upgrade --quiet -y --auto-remove
yum update -y
yum update -y
Ensure apt-get update is present in Ubuntu phase1 and not commented out ... ok
Ensure apt-get upgrade is present in Ubuntu phase1 and not commented out ... ok
Logging config does not contain debug logging ... ok
Ensure that prod firewall rules don't allow ssh traffic. ... ok
Ensure yum update is present in CentOS phase1 and not commented out ... ok
Tests that we do smoketests ... ok
Tests that we wait for autoscaling to complete ... ok
Test deleting records by value ... ok
Test getting records by value ... ok
Test listing records for a hosted zone ... ok
Test listing the available hosted zones ... ok
Tests that we handle smoketest Timeout ... ok
Test that handle smoketest failure appropriately ... ok
Test deleting an ELB ... ok
Test deletion of all ELBs ... ok
Test deletion of ELBs ... ok
get_certificate_arn() uses an IAM certificate if no ACM cert available ... ok
get_certificate_arn() prefers an ACM provided certificate ... ok
Make sure get_cname returns what we expect ... ok
Test creation a publically accessible ELB ... ok
Test creation an internal private ELB ... ok
Test creation an internal private ELB ... ok
Test creating ELB with connection draining ... ok
Test creating a ELB ... ok
Test creating an ELB with an idle timeout ... ok
Test creation an ELB with TLS ... ok
Updating an ELB doesn't add create a new ELB ... ok
Test get_elb for a hostclass ... ok
Test getting the list of ELBs ... ok

----------------------------------------------------------------------
XML: /Users/ejen/pydevels/asiaq-aws/reports/nosetests.xml
Name                                        Stmts   Miss  Cover   Missing
-------------------------------------------------------------------------
disco_aws_automation                           44      1    98%   31
disco_aws_automation.asiaq_sns                 67     48    28%   20-30, 39, 43, 51, 55-56, 63-71, 76, 83, 98-148
disco_aws_automation.disco_accounts           196    147    25%   32-36, 42, 46-50, 54-58, 68-79, 85, 89-93, 97-118, 123-126, 131-134, 139, 142-152, 156-161, 169, 173-185, 189, 194, 199, 203, 206-210, 214-219, 222-226, 230, 234, 238-241, 245, 249, 253, 257, 265-273, 277-286, 290-293, 297-327
disco_aws_automation.disco_acm                 23     15    35%   27-33, 37-46
disco_aws_automation.disco_alarm               48      0   100%   
disco_aws_automation.disco_alarm_config       150     41    73%   28-29, 32, 54, 77, 82-85, 92, 167-168, 190-194, 212-216, 241-245, 248, 255, 264, 273-292
disco_aws_automation.disco_app_auth            77     57    26%   32-35, 39-57, 62-64, 69-70, 76-82, 86-91, 99-111, 115-137
disco_aws_automation.disco_autoscale          184     75    59%   42, 49, 69-78, 82, 110, 114-118, 122, 127-131, 135-140, 160, 168, 174, 250, 264, 268-270, 274, 278-282, 288-290, 299-306, 309, 324-338, 343-363
disco_aws_automation.disco_aws                377    168    55%   78, 84-87, 93, 97, 106, 114, 159-163, 196-201, 217-218, 242-243, 273-274, 302, 404, 408, 414-433, 443-451, 455-456, 481-485, 494-503, 510-514, 518, 522, 528, 536-548, 554-559, 587-639, 644-645, 651-679, 686-696, 705-729, 767-769, 776-799, 813, 817, 821
disco_aws_automation.disco_aws_util            23     14    39%   35-50
disco_aws_automation.disco_bake               347    242    30%   44, 61-64, 69-72, 77-80, 84-104, 108, 112-115, 125-128, 132-135, 140-145, 172-176, 180, 187-191, 198-208, 212, 219-220, 226-228, 234-235, 241-255, 261-263, 271-274, 280-290, 296-297, 308-323, 337-421, 429-438, 445-447, 451-453, 461-462, 466-468, 474-475, 493-528, 537-540, 554-559, 574-585, 591-592, 599-604, 608-610, 614-616, 624-625, 632, 667-676, 683-685
disco_aws_automation.disco_chaos               36      0   100%   
disco_aws_automation.disco_constants           11      0   100%   
disco_aws_automation.disco_creds               54     35    35%   23-24, 29-33, 37, 41-45, 49-55, 59-67, 71-73, 77-78, 82, 90
disco_aws_automation.disco_deploy             277      8    97%   198-200, 222, 307-311
disco_aws_automation.disco_dynamodb            68     23    66%   39-52, 80-90, 96, 114-117
disco_aws_automation.disco_eip                 15      9    40%   14, 18, 22, 31-39
disco_aws_automation.disco_elasticache        139     19    86%   35-42, 62, 109-110, 118, 137-138, 265-266, 272, 286, 291
disco_aws_automation.disco_elb                 89      8    91%   58-59, 74-79, 187-188, 205
disco_aws_automation.disco_iam                376    281    25%   38, 54-56, 63-65, 69, 73-79, 83-84, 88-90, 94, 101, 105-110, 114, 119-120, 124, 127, 131-135, 140, 147-155, 159-160, 164-177, 181-183, 187, 191, 195-197, 201-205, 209, 213, 217-218, 227-228, 237-238, 248-251, 255, 259, 265-268, 272-273, 277-282, 286-287, 294-296, 300-304, 308, 312, 316, 320-323, 329, 333-335, 338-339, 342-351, 354-357, 360-366, 369-375, 378-383, 386-393, 406-442, 451-481, 484-487, 491-515, 519, 525-526, 530-566, 572-583, 589-590, 597-602, 611, 615-619
disco_aws_automation.disco_log_metrics         70     10    86%   31-38, 53-54
disco_aws_automation.disco_metanetwork        127     96    24%   23-27, 36-40, 43-44, 51-53, 57-59, 62-63, 68-72, 75-80, 83-86, 91-95, 98-103, 108, 111-118, 123-127, 130, 135-158, 162-167, 174-180, 187-196, 205-222, 226-238
disco_aws_automation.disco_metrics            108     89    18%   22-26, 29-44, 51-57, 65-73, 83-99, 106-117, 125-131, 135-136, 144-164, 171-207
disco_aws_automation.disco_rds                227    164    28%   55, 60-63, 70-76, 80, 86-88, 92-118, 124-126, 132-157, 163-164, 170-178, 184-188, 194-198, 208-216, 224-230, 234-237, 244-261, 268-272, 279-287, 290-307, 311-335, 346-362, 372, 386-387, 406-425, 450-458
disco_aws_automation.disco_remote_exec        101     80    21%   27, 35-52, 60-74, 85-131, 136-159, 163-167, 170-172
disco_aws_automation.disco_route53             34      9    74%   32-42, 68-70
disco_aws_automation.disco_storage            120     63    48%   134-137, 146-151, 182, 193, 202-206, 210-218, 240-265, 273-276, 280-283, 291-302
disco_aws_automation.disco_vpc                460    384    17%   44-67, 71-81, 85, 91-109, 114-117, 122-124, 128, 136-148, 153-160, 164-166, 170, 174-178, 182-191, 195-196, 200-222, 231-262, 269-278, 281-290, 294-299, 303-314, 318-332, 336-352, 356-375, 379-432, 439-440, 446-453, 462-465, 469, 473-489, 493-513, 517, 521-526, 530-531, 535-554, 558-561, 565, 569-573, 577-585, 593-602, 607-614, 623-675, 686-719, 724-750, 755-786, 793-794, 803-814, 823-829
disco_aws_automation.exceptions                48      0   100%   
disco_aws_automation.hostclass_templating      21     13    38%   28-37, 44-48
disco_aws_automation.resource_helper           81     53    35%   35-49, 70, 73, 80-83, 88-108, 115-135
disco_aws_automation.version                    3      0   100%   
-------------------------------------------------------------------------
TOTAL                                        4001   2152    46%   
----------------------------------------------------------------------
Ran 185 tests in 17.643s

OK
[call({'min_size': 1, 'integration_test': None, 'deployable': 'no', 'desired_size': 1, 'hostclass': 'mhcscarey'}, <MagicMock spec='Image' id='4527054608'>, 1, dry_run=False)]
Validated 0 files
(0, 3, 3)
[call(None, <MagicMock spec='Image' id='4500268816'>, 0, dry_run=False)]
